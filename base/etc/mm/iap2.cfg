# This section is mandatory.  Populate all fields with accessory-specific info.
[accessory]
name=HAVAL
model=HAVAL
manufacturer=Foryou.
serial=RN6RE3201803230001
firmware_version=1.0.1
hardware_version=1.0.1
current_language=en
supported_languages=en,zh

# This section describes the transport to the Apple device.
[transport]
name=Lightning Connector
id=1234

# This section describes parameters for the link which will override the default values
# maxretries: max number of retries if command is not acknowledged
# retrytimeout: time to wait for an acknowledgement (ms)
# probelimit: when probe option is used via commandline, the number of times to send the probe before giving up
# acktimeoutprio: the priority at which to send ACK packets from the Accessory
[link]
;maxretries=30
;retrytimeout=2000
;probelimit=10
acktimeout=500
acktimeoutprio=60
# This section handles options for Application Launch.
[applaunch]
enable=yes

# This section describes options when the accessory is USB host.
# carplay: default to "yes" if NCM interface is found
;[usbhost]
;carplay=yes

# This section handles options for the Bluetooth Connection Status
# mac: The mac address that is paired to the Apple device (IAP2_BT_STATUS_MAC_ADDR environment variable will be used first)
# connectstatus: The initial connection status sent to the device.  This can be controlled via API after connection.
;[bluetooth]
;enable=yes
;id=1111
;name=Bluetooth
;connectstatus=enable
;mac=E0:C7:9D:4A:1C:BF

# This section handles options for USB Device Mode audio.
# Mandatory rates: 32000,44100,48000
# Optional rates: 8000,11025,12000,16000,22050,24000
# autostart: driver will automatically request device to stream audio during initialization
[devaudio]
enable=yes
rates=32000,44100,48000
;autostart=yes

# This section handles options for Media Library Sync.
# syncbufsize: Internal buffer size for sync. The driver will stop and resume if the internal buffer is full.
# syynccompletetimeout (ms): Simulate a sync complete if there has not been any media update after X ms.
# syncafterstop: Keep background sync active to allow future media library updates; published to PPS
[medialib]
enable=no
syncbufsize=131072
synccompletetimeout=2000
syncafterstop=yes

# This section handles options for the NowPlaying attributes to be published to PPS.
# metadata: Track attributes to be published.
# playback: Playback state attributes to be published.
[nowplaying]
enable=no
metadata=PersistentIdentifier,Title,PlaybackDurationInMilliseconds,AlbumTitle,AlbumTrackNumber,AlbumTrackCount,AlbumDiscNumber,AlbumDiscCount,Artist,Genre,Composer,ArtworkFileTransferIdentifier,IsLikeSupported,IsBanSupported,IsLiked,IsBanned,ChapterCount
playback=Status,ElapsedTimeInMilliseconds,QueueIndex,QueueCount,QueueChapterIndex,ShuffleMode,RepeatMode,AppName,MediaLibraryUniqueIdentifier,SetElapsedTimeAvailable,AppBundleID,iTunesRadioAd,iTunesRadioStationName,iTunesRadioStationMediaPlaylistPersistentID,Speed,QueueListAvail,QueueListTransferID

# This section handles options for Location.
# types: Types of NMEA sentences that the accessory can provide
[location]
enable=yes
name=Location
id=1234
types=PASCD,PAGCD

# This section handles options for External Accessory Protocol.
# protocol=Application protocol string
# nativeprotocol=Native Application protocol string
# match:
# 0=The device will not attempt to find a matching app, but no button is present
# 1=The device will attempt to find a matching app but a button is present
# 2=The device will not attempt to find a matching app, but a button is present
# appmatchID: Preferred application
# maxbufsize: Buffer size for receiving data for each protocol
# multisessionperprotocol: Support multiple sessions for the same protocol (requires iOS8)
# ppsprotocoldir: path to directory containing pps objects named as additional protocol strings to be added.
# -Each object's name will be the name of a protocol that will be added (eg 'com.company.example')
# -Each object must contain a 'match' attribute that corresponds with the 'match' setting detailed above
# -eg: echo -n "match::2" > /pps/config/iap2/protocols/com.company.example
;[eap]
;enable=yes
;protocol=com.company.protocolstr1,match::0
;protocol=com.qnx.echoserver,match::1
;protocol=com.qnx.eatest,match::2
;nativeprotocol=com.qnx.eatest,match::2
;appmatchID=com.qnx.EADemo
;maxbufsize=32768
;multisessionperprotocol=no
;ppsprotocoldir=/pps/config/iap2/protocols/

# This section handles options for the Power feature.
# charge: Charge battery when connected
# current: Amount of current available for the iPod (0, 1000, 2100, 2400)
# types: Types of information to request from the device
[power]
enable=yes
charge=yes
current=1000
types=MaximumCurrentDrawnFromAccessory,DeviceBatteryWillChargeIfPowerIsPresent,IsExternalChargerConnected,BatteryChargingState,BatteryChargeLevel

# This section handles options for the Communications feature.
# lists: StartListUpdates
# recentslistmax: StartListUpdates RecentListMax
# recentslistcombine: StartListUpdates RecentListCombine
# favoriteslistmax: StartListUpdates FavoritesListMax
;[communications]
;enable=yes
;lists=no
;recentslistmax=0
;recentslistcombine=yes
;favoriteslistmax=0

# This section handles options for the Vehicle information feature.
# infoengine: Type(s) of engine - gasoline,electric,diesel,cng
# statustypes: Types of vehicle info that the accessory can provide
[vehicle]
enable=yes
infoid=1234
infoname=Vehicle Information
infoengine=gasoline
displayname=HAVAL
statusid=1234
statusname=Vehicle Status
statustypes=outsidetemp

# This section handles options custom HID interfaces.
# mediaremote: The internal driver Media Remote HID - can be customized
# component=name::<name>,function::<function value>
# nativecomponent=name::<name>,function::<function value>,interface::<USB interface number of native HID>
[hid]
;vendorid=0x05AC
;deviceid=0x0001
;mediaremote=next,prev,shuffle,repeat,playpause
;component=name::USB Keyboard,function::0
;component=name::Steering Wheel Media Playback Remote,function::1
;component=name::AssistiveTouch Joystick,function::2
;component=name::Standard Gamepad,function::3
;component=name::Form-Fitting Extended Gamepad,function::4
;component=name::Non Form-Fitting Extended Gamepad,function::6
;component=name::Switch Control,function::7
;nativecomponent=name::Playback Remote,function::1,interface::1

# This section handles various workarounds.
# btstatusdelay: Add a delay before sending StartBluetoothConnectionUpdates to workaround the Apple device becoming unresponsive.
;[workarounds]
;btstatusdelay=yes

# As part of Apple certification, you must demonstrate a use case for any APIs that are enabled.
# By default, they are all enabled. You should disable any APIs that you do not use by setting the desired API(s) to 'noâ€?
[commands]
iap2_medialib_play_resume=no
iap2_medialib_play_collection=no
iap2_medialib_play_tracks=no
iap2_medialib_play_all=no
iap2_nowplay_set=no
#iap2_communications_initialcall=yes
#iap2_communications_acceptcall=yes
#iap2_communications_endcall=yes
#iap2_communications_swapcalls=yes
#iap2_communications_mergecalls=yes
#iap2_communications_holdstatusupdate=yes
#iap2_communications_mutestatusupdate=yes
#iap2_communications_senddtmf=yes

# This section handles PPS overrides for certain values in this config file.
# If you specify a pps attribute here, the driver will use it in place of the value specified in this config file.
# value=<attribute>@<path to pps object>
#[ppsoverride]
#name=name@/pps/services/hwinfo/status
#model=model@/pps/services/hwinfo/status
#manufacturer=manufacturer@/pps/services/hwinfo/status
#serial=serial@/pps/services/hwinfo/status
#firmware_version=firmware_version@/pps/services/hwinfo/status
#hardware_version=hardware_version@/pps/services/hwinfo/status
#current_language=current_language@/pps/services/hwinfo/status
#supported_languages=supported_languages@/pps/services/hwinfo/status
#btconnectstatus=btconnectstatus@/pps/services/bluetooth/status


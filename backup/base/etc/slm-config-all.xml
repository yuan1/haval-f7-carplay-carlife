<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE SLM_system [ 
	<!ENTITY platform SYSTEM 'slm-config-platform.xml'> 
	<!ENTITY modules SYSTEM 'slm-config-modules.xml'> 
]>

<SLM:system xmlns:SLM="SLM">
    <!--
      Defines services that all apps require before coming up
    -->
    <SLM:module name="car2-init">
        <SLM:member>symlink_*</SLM:member>
        <SLM:member>pps</SLM:member>
        <SLM:member>random</SLM:member>
		<SLM:member>usblauncher</SLM:member> 
        <SLM:member>pps-setup</SLM:member>
        <SLM:member>iopkt</SLM:member> 
	    <SLM:member>hmi</SLM:member>
		<SLM:member>foryou-service</SLM:member> 
		<!--<SLM:member>mmrenderer</SLM:member> -->
		<SLM:member>mmdetect</SLM:member>
		<!--<SLM:member>uptime-mmrenderer</SLM:member> -->
		<SLM:member>uptime-mmdetect</SLM:member>
		<SLM:member>fymmplayer</SLM:member>
        <SLM:member>mixer-volume</SLM:member>
        <!--<SLM:member>uptime-hmi</SLM:member> -->
        <SLM:member>start-gps</SLM:member>  
        <SLM:member>io-audio_5100</SLM:member>
		<SLM:member>io-audio_dsnoop</SLM:member>
        <SLM:member>location_manager</SLM:member>
        <!-- <SLM:member>calib</SLM:member> -->
		<!-- <SLM:member>calib-foryou</SLM:member> -->
		
        <SLM:member>foryou-delay-start</SLM:member>  
		
		<SLM:member>GeneralService</SLM:member>
	
	<SLM:member>start-netmanager</SLM:member>
	
    </SLM:module>
	
    <!--
       Defines modules that will be stopped when the system is rebooted, 
       from top to bottom. This allows a more custom/controlled shutdown.
    -->
    <SLM:module name="car2-shutdown">
        <SLM:member>mmplayer</SLM:member>
	    <SLM:member>hmi</SLM:member>
    </SLM:module>
	
	
	<!--   ######################foryou middle  begin ############################	-->
	
	<SLM:module name="3rd-apps">
	    <SLM:member>launcher</SLM:member>  
	    <SLM:member>webkit</SLM:member>
	    <SLM:member>uptime-zygote</SLM:member>
	    <SLM:member>fykeyboard</SLM:member>
	    <SLM:member>apkRuntime</SLM:member>
    </SLM:module>
	
	<SLM:module name="start-netmanager">
	    <SLM:member>certmgr</SLM:member>
		<SLM:member>net_configured</SLM:member>
	    <SLM:member>io-locp</SLM:member>
		<SLM:member>qconn</SLM:member> 
    </SLM:module>
	
	<SLM:module name="net-debug">
	    
		<SLM:member>devc-pty</SLM:member>
    </SLM:module>
	
	<SLM:module name="fymmplayer">
	<!-- <SLM:member>mmplayer</SLM:member>
	     <SLM:member>uptime-mmplayer</SLM:member>
		-->
	    <SLM:member>qdb</SLM:member> 
		<SLM:member>mmsync</SLM:member> 
		<SLM:member>mmrenderer</SLM:member> 
    </SLM:module>
	
	<SLM:module name="foryou-service">
	    <!--<SLM:member>uptime-IVISystemService</SLM:member> -->
	    <!--<SLM:member>VideoService</SLM:member> -->
		<SLM:member>uptime-ForyouNavigator</SLM:member>
	    <!-- <SLM:member>start-sysinfo</SLM:member> -->
	    <SLM:member>MediaService</SLM:member>
		<!-- <SLM:member>KanziService</SLM:member> -->
	    <SLM:member>iap2Service</SLM:member>
	    <SLM:member>RadioService</SLM:member>
		<!-- <SLM:member>CANService</SLM:member> -->
	    <SLM:member>BluetoothService</SLM:member>
	    <SLM:member>TBoxService</SLM:member>
		<SLM:member>protect_iopkt</SLM:member>
    </SLM:module>
	
	
	<SLM:module name="foryou-delay-start">
		<SLM:member>SettingService</SLM:member>
        <!-- <SLM:member>EQService</SLM:member> -->
		<!-- <SLM:member>natp</SLM:member> -->
		<SLM:member>ASRService</SLM:member>
		<SLM:member>processMonitor</SLM:member>
		<SLM:member>AutoTestService</SLM:member>
		<!-- <SLM:member>DRService</SLM:member> -->
		<!--<SLM:member>MaintainService</SLM:member>-->
		<!-- SLM:member>PublicPmtService</SLM:member-->
		<SLM:member>UpdateService</SLM:member>
		<SLM:member>tspService</SLM:member>
		<!--<SLM:member>CarLifeManager</SLM:member> -->
		<SLM:member>NetManager</SLM:member>
		<SLM:member>TTSService</SLM:member>
		<SLM:member>WifiService</SLM:member>
    </SLM:module>
	
	 <SLM:component name="start-gps">
        <SLM:command>no_loop</SLM:command>
        <SLM:args></SLM:args>
		<SLM:depend>start-gps.sh</SLM:depend>
		<SLM:depend>fydelay-5</SLM:depend>
    </SLM:component>

	<SLM:component name="start-sysinfo">
        <SLM:command>no_loop</SLM:command>
        <SLM:args></SLM:args>
		<SLM:waitfor wait="pathname">/dev/sysinfo</SLM:waitfor>
    </SLM:component>
	
	<SLM:component name="GeneralService">
		<SLM:command>/base/fyapps/mids/GeneralService</SLM:command>
		<SLM:args></SLM:args>	
		<!-- <SLM:depend>WifiService</SLM:depend> -->
		<SLM:depend>start-gps</SLM:depend>
		<SLM:depend>fydelay-8</SLM:depend>
    </SLM:component>
    
        
    <SLM:component name="uptime-ForyouNavigator">
        <SLM:command>/proc/boot/timestamp</SLM:command>
        <SLM:args>"ForyouNavigator LAUNCHED"</SLM:args>
        <SLM:depend>hmi</SLM:depend>
    </SLM:component>
    
     <SLM:component name="fykeyboard">
        <SLM:command>keyboard-imf</SLM:command>
	    <SLM:args>-U 99:0</SLM:args>
	    <SLM:stop stop="signal">SIGTERM</SLM:stop>
	    <SLM:depend>pps-setup</SLM:depend>
        <SLM:depend>screen-ready</SLM:depend>
        <SLM:depend>io-hid</SLM:depend>
   </SLM:component>

    <!--
    <SLM:component name="uptime-IVISystemService">
        <SLM:command>/proc/boot/timestamp</SLM:command>
        <SLM:args>"IVISystemService LAUNCHED"</SLM:args>
		<SLM:waitfor wait="exits"></SLM:waitfor>
        <SLM:depend>IVISystemService</SLM:depend>
    </SLM:component>
    -->
    
    <SLM:component name="IVISystemService">
        <SLM:command>no_loop</SLM:command>
        <SLM:args></SLM:args>
        <!--
        <SLM:waitfor wait="pathname">/pps/foryou/system/systeminit</SLM:waitfor>
		<SLM:depend>pps</SLM:depend>
		<SLM:depend>uptime-MCUCommService</SLM:depend>		
		<SLM:priority>12r</SLM:priority>
		 -->
    </SLM:component>
	
    <SLM:component name="uptime-MCUCommService">
        <SLM:command>no_loop</SLM:command>
        <!--
        <SLM:args>"MCUCommService LAUNCHED"</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
        <SLM:depend>MCUCommService</SLM:depend>
        -->
    </SLM:component>

	 <SLM:component name="MCUCommService">
        <SLM:command>no_loop</SLM:command>
        <!--
        <SLM:args></SLM:args>
        <SLM:waitfor wait="pathname">/dev/name/local/foryou/resmgr/mcucom/system</SLM:waitfor>
        <SLM:depend>symlink_base</SLM:depend>
		<SLM:depend>symlink_etc</SLM:depend>
		<SLM:priority>12r</SLM:priority>
				-->
    </SLM:component>
    
    <SLM:component name="RadioService">
        <SLM:command>/fyapps/mids/RadioService</SLM:command>
        <SLM:args></SLM:args>
    </SLM:component>   
	
       <!--
    <SLM:component name="DiscService">
        <SLM:command>/fyapps/mids/DiscService</SLM:command>
        <SLM:args></SLM:args>	
		<SLM:depend>VideoService</SLM:depend>
		<SLM:depend>qdb</SLM:depend>
		<SLM:repair>replace</SLM:repair>
    </SLM:component>
			-->
    
       <!--
 <SLM:component name="CarLifeManager">
        <SLM:command>/fyapps/mids/CarLifeManager</SLM:command>
        <SLM:args></SLM:args>
        <SLM:depend>fydelay-2</SLM:depend>
		<SLM:repair>replace</SLM:repair>
    </SLM:component>    
	-->
    <SLM:component name="VideoService">
        <SLM:command>/fyapps/mids/VideoService</SLM:command>
        <SLM:args></SLM:args>	
		<!--<SLM:depend>vcapture</SLM:depend>-->
		<SLM:depend>pps</SLM:depend>
		<SLM:priority>12r</SLM:priority>
    </SLM:component>
	
	<SLM:component name="LinkerService">
        <SLM:command>/base/fyapps/bins/start-fylinker.sh</SLM:command>
        <SLM:args></SLM:args>	
		<SLM:depend>mmrenderer</SLM:depend>
		<SLM:depend>ethernet</SLM:depend>
		<SLM:depend>BluetoothService</SLM:depend>
    </SLM:component>
	
	<SLM:component name="protect_iopkt">
        <SLM:command>/base/usr/sbin/protect_iopkt</SLM:command>
        <SLM:args>-t tbox -d 192.168.225.1 -w </SLM:args>	
		<SLM:depend>ethernet</SLM:depend>
    </SLM:component>
	
	<SLM:component name="CANService">
        <SLM:command>/base/fyapps/mids/CANService</SLM:command>
        <SLM:args></SLM:args>	
		<SLM:priority>11r</SLM:priority>
		<SLM:waitfor wait="pathname">/dev/name/local/foryou/resmgr/mcucom/ext4</SLM:waitfor>
    </SLM:component>
    
	<SLM:component name="AutoTestService">
        <SLM:command>/base/fyapps/mids/AutoTestService</SLM:command>
        <SLM:args></SLM:args>	
		<SLM:depend>start-sysinfo</SLM:depend>
		<SLM:depend>start-gps</SLM:depend>
		<SLM:repair>replace</SLM:repair>
    </SLM:component>
	
<!--
    <SLM:component name="vcapture">
        <SLM:command>/usr/sbin/vcapture</SLM:command>
        <SLM:args></SLM:args>	
		<SLM:waitfor wait="pathname">/dev/vcapture</SLM:waitfor>
    </SLM:component>		
	-->
	
	 <SLM:component name="vcapture">
        <SLM:command>no_loop</SLM:command>
        <SLM:args></SLM:args>	
		<SLM:waitfor wait="pathname">/dev/vcapture</SLM:waitfor>
    </SLM:component>	
	
	
    <SLM:component name="MediaService">
        <SLM:command>/fyapps/mids/MediaService</SLM:command>
        <SLM:args></SLM:args>
		<SLM:depend>mmdetect</SLM:depend>
		<SLM:depend>mmrenderer</SLM:depend>
        <SLM:priority>11r</SLM:priority>
    </SLM:component>

    <SLM:component name="iap2Service">
        <SLM:command>/fyapps/mids/iap2Service</SLM:command>
        <SLM:args></SLM:args>
		<SLM:depend>qdb</SLM:depend>
    </SLM:component>

        <SLM:component name="TBoxService">
        <SLM:command>/fyapps/mids/TBoxService</SLM:command>
        <SLM:args></SLM:args>
		<SLM:depend>fydelay-8</SLM:depend>
		<SLM:repair>replace</SLM:repair>
    </SLM:component>
	
	  <SLM:component name="EQService">
        <SLM:command>/fyapps/mids/EQService</SLM:command>
        <SLM:args></SLM:args>
    </SLM:component>

    
        <SLM:component name="TTSService">
        <SLM:command>/fyapps/mids/TTSService</SLM:command>
        <SLM:args></SLM:args>
		<SLM:repair>replace</SLM:repair>
    </SLM:component>
	
	<SLM:component name="WifiService">
        <SLM:command>/fyapps/mids/WifiService</SLM:command>
        <SLM:args></SLM:args>
		<SLM:depend>fydelay-5</SLM:depend>
    </SLM:component>
	
    <SLM:component name="SettingService">
        <SLM:command>/fyapps/mids/SettingService</SLM:command>
        <SLM:args></SLM:args>
		 <SLM:priority>11r</SLM:priority>
    </SLM:component>

    <SLM:component name="UpdateService">
        <SLM:command>/fyapps/mids/UpdateService</SLM:command>
        <SLM:args></SLM:args>
		<SLM:depend>fydelay-5</SLM:depend>
		
    </SLM:component>
    
    <SLM:component name="tspService">
        <SLM:command>/fyapps/mids/tspService</SLM:command>
        <SLM:args></SLM:args>
		<SLM:depend>fydelay-5</SLM:depend>
		
    </SLM:component>
	
    <SLM:component name="NetManager">
        <SLM:command>/fyapps/bins/netmanager.sh</SLM:command>
        <SLM:args></SLM:args>
    </SLM:component>
    
    <SLM:component name="natp">
        <SLM:command>/base/asr_res/vr/ddfw/start.sh</SLM:command>
        <SLM:args></SLM:args>
		<!--SLM:depend>qdb</SLM:depend-->
		<SLM:depend>fydelay-2</SLM:depend>
    </SLM:component> 
	
    <SLM:component name="ASRService">
        <SLM:command>/fyapps/mids/ASRService</SLM:command>
        <SLM:args></SLM:args>
		<SLM:repair>replace</SLM:repair>
		<!--SLM:depend>qdb</SLM:depend-->
		<SLM:depend>fydelay-15</SLM:depend>
    </SLM:component> 
	
	
	<!--<
	<SLM:component name="DRService">
        <SLM:command>/fyapps/mids/DRService</SLM:command>
        <SLM:args></SLM:args>
		<SLM:repair>replace</SLM:repair>
		<SLM:priority>12r</SLM:priority>
		<SLM:depend>fydelay-5</SLM:depend>
    </SLM:component> 
	-->
    
	<SLM:component name="MaintainService">
        <SLM:command>/fyapps/mids/MaintainService</SLM:command>
        <SLM:depend>CANService</SLM:depend>
        <SLM:repair>replace</SLM:repair>
        <SLM:args></SLM:args>
    </SLM:component> 
    
    <SLM:component name="PublicPmtService">
        <SLM:command>/fyapps/mids/PublicPmtService</SLM:command>
        <SLM:repair>replace</SLM:repair>
		<SLM:depend>fydelay-2</SLM:depend>
        <SLM:args></SLM:args>
    </SLM:component>
    
    <SLM:component name="processMonitor">
        <SLM:command>/fyapps/mids/processMonitor</SLM:command>
        <SLM:args></SLM:args>
		<SLM:repair>replace</SLM:repair>
    </SLM:component> 

    <SLM:component name="ham">
     	<SLM:command>/usr/sbin/ham</SLM:command>
        <SLM:args></SLM:args>
    </SLM:component>
	
	<SLM:component name="fydelay-30">
        <SLM:command>sleep</SLM:command>
        <SLM:args>30</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
    </SLM:component>	

	<SLM:component name="fydelay-8">
        <SLM:command>sleep</SLM:command>
        <SLM:args>8</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
    </SLM:component>
	
	<SLM:component name="fydelay-15">
        <SLM:command>sleep</SLM:command>
        <SLM:args>15</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
    </SLM:component>
	
	 <SLM:component name="fydelay-5">
        <SLM:command>sleep</SLM:command>
        <SLM:args>5</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
    </SLM:component>
	
	<SLM:component name="fydelay-4">
        <SLM:command>sleep</SLM:command>
        <SLM:args>4</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
    </SLM:component>
	
	<SLM:component name="fydelay-3">
        <SLM:command>sleep</SLM:command>
        <SLM:args>3</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
    </SLM:component>
	
	<SLM:component name="fydelay-2">
        <SLM:command>sleep</SLM:command>
        <SLM:args>2</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
    </SLM:component>
	
<!--  ################################  foryou middle end ############################  -->



   <!-- pps starts in the IFS, this just blocks until /pps is available -->
   <SLM:component name="pps">
        <SLM:command launch="builtin">no_op</SLM:command>
        <SLM:args></SLM:args>
        <SLM:waitfor wait="pathname">/pps</SLM:waitfor>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
		<SLM:priority>12r</SLM:priority>
   </SLM:component>

    <SLM:component name="secondary-ifs">
	<SLM:command launch="builtin">no_op</SLM:command>
	<SLM:waitfor wait="pathname" polltime="100:20000">/carifs2</SLM:waitfor>
    </SLM:component>

    <SLM:component name="screen-ready">
        <SLM:command launch="builtin">no_op</SLM:command>
        <SLM:waitfor wait="pathname">/dev/screen</SLM:waitfor>
    </SLM:component>

    <SLM:component name="calib">
        <SLM:command>/base/scripts/calib-start.sh</SLM:command>
	<SLM:waitfor wait="pathname" >/var/etc/system/config/calib.localhost</SLM:waitfor>
	<SLM:depend state="stateless">devi-hid</SLM:depend>
 	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>screen-ready</SLM:depend>
    </SLM:component>

    <!--
	<SLM:component name="calib-foryou">
        <SLM:command>/base/scripts/calib-start.sh</SLM:command>
	<SLM:waitfor wait="pathname" >/var/etc/system/config/calib.localhost</SLM:waitfor>
	<SLM:depend>screen-ready</SLM:depend>
    </SLM:component>
    -->
    
<!-- Uncomment the section below to enable automatic startup of the HTML5 HMI and comment the Qt5 section which follows -->
<!-- 
    <SLM:component name="hmi">
        <SLM:command>/usr/bin/weblauncher</SLM:command>
	<SLM:args>webkit-launcher /accounts/1000/appdata/car.navigator/app/native/wwe</SLM:args>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:envvar>HOME=/accounts/1000/appdata/car.navigator/data</SLM:envvar>
	<SLM:depend>symlink_hmi</SLM:depend>
	<SLM:depend>symlink_base</SLM:depend>
	<SLM:depend>iopkt</SLM:depend>
	<SLM:depend>pps</SLM:depend>
	<SLM:depend>calib-done</SLM:depend>
	<SLM:depend>screen-ready</SLM:depend>
    </SLM:component>   
-->
<!-- End uncomment for HTML5 HMI -->

<!-- Comment the section below to disable automatic startup of the Qt5 HMI -->
<!-- --> 

 <SLM:component name="hmi">
     <SLM:command>sleep</SLM:command>
     <SLM:args>1</SLM:args>
     <!--
	<SLM:depend>symlink_hmi</SLM:depend>
	<SLM:depend>symlink_base</SLM:depend>
	<SLM:depend>iopkt</SLM:depend>
	<SLM:depend>pps</SLM:depend>
	<SLM:depend>calib-done</SLM:depend>
	<SLM:depend>screen-ready</SLM:depend>
	<SLM:depend>IVISystemService</SLM:depend>
	<SLM:priority>11r</SLM:priority>
	 <SLM:repair>replace</SLM:repair>
	-->
    </SLM:component>
    
<!-- -->
<!-- End comment for Qt5 HMI -->

   <!-- HMI must wait for calibration to be done (first boot primarily) - https://jira.bbqnx.net/browse/QCARTWO-3579 -->
   <SLM:component name="calib-done">
        <SLM:command launch="builtin">no_op</SLM:command>
        <SLM:args></SLM:args>
        <!--<SLM:waitfor wait="pathname" polltime="100:0">/var/etc/system/config/calib.localhost</SLM:waitfor>-->
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>

   <SLM:component name="authman">
        <SLM:command>authman</SLM:command>
	<SLM:args>-i -U 505</SLM:args>
	<SLM:waitfor wait="pathname">/dev/authman</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>
    
  <SLM:component name="launcher">
        <SLM:command>launcher</SLM:command>
        <SLM:args>-i -U 89:0,1000,1004,1100,1104,1200,1204 -m 970 -t 4 -p / -v -b</SLM:args>
	<SLM:waitfor wait="pathname">/pps/services/launcher/control</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>authman</SLM:depend> 
	<SLM:depend>pps</SLM:depend>
   </SLM:component>

    <SLM:component name="uptime-hmi">
        <SLM:command>/proc/boot/timestamp</SLM:command>
        <SLM:args>"HMI LAUNCHED"</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
        <SLM:depend>hmi</SLM:depend>
    </SLM:component>

    <SLM:component name="uptime-mmplayer">
        <SLM:command>/proc/boot/timestamp</SLM:command>
        <SLM:args>"MMPLAYER LAUNCHED"</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
        <SLM:depend>mmplayer</SLM:depend>
    </SLM:component>

    <SLM:component name="webkit">
        <SLM:command>webkit-launcher</SLM:command>
        <SLM:args></SLM:args>
        <SLM:waitfor wait="pathname">/dev/webkit</SLM:waitfor>
        <SLM:priority>12r</SLM:priority>
        <SLM:depend>symlink_hmi</SLM:depend>
        <SLM:depend>secondary-ifs</SLM:depend>
    </SLM:component>
    
    <SLM:component name="uptime-zygote">
        <SLM:command>/proc/boot/timestamp</SLM:command>
        <SLM:args>"DONE WEB-ZYGOTE"</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
        <SLM:depend>webkit</SLM:depend>
    </SLM:component>
    
   <SLM:component name="iopkt">
 	<SLM:command>io-pkt-v6-hc</SLM:command>
	<SLM:args>-ptcpip stacksize=8192</SLM:args>
	<SLM:waitfor wait="pathname">/dev/socket</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>
   
   <SLM:component name="tmpfs">
        <SLM:command>io-fs-media</SLM:command>
	<SLM:args>-dtmp,minsize=4M,maxsize=64M</SLM:args>
	<SLM:waitfor wait="pathname">/fs/tmpfs</SLM:waitfor>
 	<SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>
   
    <SLM:component name="symlink_tmpfs">
	  <SLM:command launch="builtin">pathmgr_symlink</SLM:command>
	  <SLM:args>/var/tmp /tmp;/fs/tmpfs/db /db; /fs/tmpfs/db /accounts/1000/db; /fs/tmpfs/log /var/log</SLM:args>
	<SLM:depend>tmpfs</SLM:depend>
	</SLM:component>

    <SLM:component name="mkdir_tmpfs">
	  <SLM:command launch="builtin">mkdir</SLM:command>
	<SLM:args>/fs/tmpfs/db;/fs/tmpfs/log;/fs/tmpfs/log/io-bluetooth</SLM:args>
	<SLM:depend>tmpfs</SLM:depend>
    </SLM:component>

    <SLM:component name="tmpfs_init">
	    <SLM:command>/base/scripts/tmpfs_init.sh</SLM:command>
        <SLM:args></SLM:args>
	<SLM:waitfor wait="exits"></SLM:waitfor>
	<SLM:depend>mkdir_tmpfs</SLM:depend>
    </SLM:component>

   <SLM:component name="bootmgr">
        <SLM:command>bootmgr</SLM:command>
        <SLM:args> /base/etc/slm-config-modules.xml</SLM:args>
        <SLM:depend>pps</SLM:depend>
        <SLM:depend>hmi</SLM:depend>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>

	<!--setup various of symlinks, and those are blocking call, the following 3 sets can take 1~2 secs if using shell script, in slm builtin func, it's < 5ms -->
    <SLM:component name="symlink_base">
	  <SLM:command launch="builtin">pathmgr_symlink</SLM:command>
	  <SLM:args>/base /qnx_car2; /base/bin /bin; /base/sbin /sbin; /base/lib /lib; /base/usr /usr; /base/opt /opt; /base/etc /etc; /base/appinstall /appinstall; /base/scripts /scripts; </SLM:args>
    </SLM:component>

    <SLM:component name="symlink_etc">
	  <SLM:command launch="builtin">pathmgr_symlink</SLM:command>
	  <SLM:args>/var/etc/id /base/etc/id; /var/etc/dhcpd_urndis.leases /base/etc/dhcpd_urndis.leases; /var/etc/dhcpd_usbdnet.leases /base/etc/dhcpd_usbdnet.leases; /var/etc/iked.conf wpa_pps.conf /base/etc/iked.conf wpa_pps.conf;/var/etc/system/config/debug_host.conf /base/etc/system/config/debug_host.conf; /var/etc/system/config/calib.localhost /base/etc/system/config/calib.localhost; /var/etc/ssh /base/etc/ssh; /var/etc/www /base/etc/www</SLM:args>
    </SLM:component>

    <!-- https://jira.bbqnx.net/browse/QCARTWO-3579: TERMPORARILY HARD-CODING NAVIGATOR DIRECTORY /apps/Navigator.testDev_... -->
    <SLM:component name="symlink_hmi">
	  <SLM:command launch="builtin">pathmgr_symlink</SLM:command>
	  <SLM:args>/base/usr/bin/weblauncher /base/bin/webkit-launcher; /base/usr/hmi/common /apps/common; /apps /var/webplatform/apps; /apps /base/usr/share/webplatform/apps; /apps/Navigator.testDev_Navigator__a4514a37 /accounts/1000/appdata/car.navigator/app; /apps /apps/Navigator.testDev_Navigator__a4514a37/native/apps</SLM:args>
   </SLM:component>   

	<SLM:component name="io-audio">
		<SLM:command launch="builtin">no_op</SLM:command>
	<SLM:waitfor wait="pathname" polltime="100:15000">/dev/snd/defaultp</SLM:waitfor>
	</SLM:component>

    <SLM:component name="pps-setup">
	    <SLM:command>/base/scripts/setup-pps.sh</SLM:command>
        <SLM:args></SLM:args>
	<SLM:depend>pps</SLM:depend>
	<SLM:depend>symlink_base</SLM:depend>
	<SLM:depend>symlink_etc</SLM:depend>	
	<SLM:waitfor wait="exits"></SLM:waitfor>
    </SLM:component>

   <!-- Include external files -->
   &modules;
   
   <SLM:component name="BluetoothService">
        <SLM:command>/fyapps/mids/BluetoothService</SLM:command>
        <SLM:args></SLM:args>
        <SLM:depend>pps-bluetooth</SLM:depend>
		<SLM:priority>11r</SLM:priority>
    </SLM:component> 
	
	<SLM:component name="KanziService">
        <SLM:command>/fyapps/mids/KanziService</SLM:command>
        <SLM:args></SLM:args>
        <SLM:repair>replace</SLM:repair>
    </SLM:component> 

   <SLM:component name="random">
        <SLM:command>random</SLM:command>
	<SLM:args>-p</SLM:args>
	<SLM:waitfor wait="pathname">/dev/random</SLM:waitfor>
 	<SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>

   <SLM:component name="io-hid">
        <SLM:command>io-hid</SLM:command>
	<SLM:args>-dusb -dmicrotouch noinit </SLM:args>
	<SLM:waitfor wait="pathname">/dev/io-hid/devh-usb.so</SLM:waitfor>
	<SLM:depend>usb</SLM:depend>
 	<SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>
   
   <SLM:component name="devi-hid">
        <SLM:command>/base/scripts/hid-start.sh</SLM:command>
	<SLM:waitfor wait="pathname">/dev/devi/touch0</SLM:waitfor>
	<SLM:depend>io-hid</SLM:depend>
 	<SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>
   
    <SLM:component name="qdb_init">
	    <SLM:command>/base/scripts/qdb_init.sh</SLM:command>
        <SLM:args></SLM:args>
	<SLM:waitfor wait="exits"></SLM:waitfor>
	<SLM:depend>mkdir_tmpfs</SLM:depend>
	<SLM:depend>symlink_tmpfs</SLM:depend>
    </SLM:component>

   <SLM:component name="qdb">
        <SLM:command>qdb</SLM:command>
	<SLM:args> -A -c /pps/qnx/qdb</SLM:args>
	<SLM:waitfor wait="pathname">/dev/qdb</SLM:waitfor>
 	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>pps-setup</SLM:depend>
	<SLM:depend>qdb_init</SLM:depend>
   </SLM:component>

   <SLM:component name="ethernet">
	<SLM:command>/base/scripts/ethernet.sh</SLM:command>
	<SLM:args></SLM:args>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>iopkt</SLM:depend>
	<SLM:depend>pps-setup</SLM:depend>
	<SLM:depend>fydelay-5</SLM:depend>
   </SLM:component>   

    <SLM:component name="coreservices">
        <SLM:command>coreServices2</SLM:command>
	<SLM:args>-C /etc/system/config/coreServices2.json</SLM:args>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:waitfor wait="blocks">1</SLM:waitfor>
	<SLM:depend>pps-setup</SLM:depend>
	<SLM:depend>authman</SLM:depend>
   </SLM:component>

   <SLM:component name="nav-menu">
	  <SLM:command>/base/scripts/update_nav.sh</SLM:command>
	<SLM:args></SLM:args>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>pps-setup</SLM:depend>
	<SLM:depend>authman</SLM:depend>
   </SLM:component>

   <!-- Include external platform-specific files -->
   &platform;

  <!--SLM:component name="bslauncher">
	<SLM:command>bslauncher</SLM:command>
	<SLM:args>-L -c /var/etc/system/config/bslauncher.cfg</SLM:args>
	<SLM:waitfor wait="pathname">/pps/system/bslauncher</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>launcher</SLM:depend>
	<SLM:depend>authman</SLM:depend>
	<SLM:depend>pps-setup</SLM:depend>
   </SLM:component-->

    <!-- SLM:component name="tracelogger">
        <SLM:command>tracelogger</SLM:command>
	<SLM:args>-w -c -k8192 -S60M -M</SLM:args>
	<SLM:depend>hmi</SLM:depend>
   </SLM:component -->

   
   <SLM:component name="devc-pty">
        <SLM:command>devc-pty</SLM:command>
	    <SLM:args></SLM:args>
        <SLM:waitfor wait="pathname">/dev/ttyp0</SLM:waitfor>
	    <SLM:stop stop="signal">SIGTERM</SLM:stop>
	    <SLM:depend>hmi</SLM:depend>
   </SLM:component>

   <SLM:component name="certmgr">
        <SLM:command>certmgr_pps</SLM:command>
	<SLM:args></SLM:args>
        <SLM:waitfor wait="pathname">/pps/services/certmgr/control</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>pps-setup</SLM:depend>
	<SLM:depend>hmi</SLM:depend>
   </SLM:component>   
 

   <SLM:component name="mcd">
        <SLM:command>mcd</SLM:command>
	<SLM:args>/etc/mcd.conf</SLM:args>
	<SLM:waitfor wait="pathname">/dev/mcd</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>

<!-- for carplay -->
   <!-- for OTG -->
  <SLM:component name="usblauncher_otg">
	<SLM:command>/base/fyapps/bins/swaper_iphonemode.sh</SLM:command>
	<SLM:depend>pps</SLM:depend>
	<SLM:priority>12r</SLM:priority>
</SLM:component>

   <SLM:component name="usblauncher">
        <SLM:command>usblauncher</SLM:command>
	<SLM:args>-S0 -e -p 2 -t -s /lib/dll/pubs/ -n /dev/host/io-usb</SLM:args>
	<SLM:waitfor wait="pathname">/pps/qnx/mount</SLM:waitfor>
 	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>pps</SLM:depend>
	<SLM:depend>usb</SLM:depend>
	<SLM:depend>ethernet</SLM:depend>
	<SLM:priority>11r</SLM:priority>
   </SLM:component>
<!-- for carplay end-->

   <SLM:component name="ioacoustic">
	   <SLM:command>/base/sbin/io-acoustic</SLM:command>
	<SLM:args>-c /etc/acoustic/acoustic.conf</SLM:args>
 	<!-- SLM:waitfor wait="pathname">/dev/io-acoustic</SLM:waitfor -->
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>io-audio_mcbsp</SLM:depend>
   </SLM:component>

<!-- dxc don't support mirrorlink 
   <SLM:component name="swud">
	<SLM:command>/base/usr/sbin/swud</SLM:command>
	<SLM:args>-i swud_car2.1 -vvv</SLM:args>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:waitfor wait="blocks">1</SLM:waitfor>
   </SLM:component>

   <SLM:component name="swud_usb_discoverer">
        <SLM:command>mount</SLM:command>
        <SLM:args>-T swud /base/lib/dll/swud-usb.so</SLM:args>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>swud</SLM:depend>
        <SLM:depend>pps-setup</SLM:depend>
        <SLM:depend>mcd</SLM:depend>
   </SLM:component>

   <SLM:component name="swud_client_config">
        <SLM:command>mount</SLM:command>
        <SLM:args>-T swud /base/lib/dll/swud-client-config.so</SLM:args>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
        <SLM:depend>swud</SLM:depend>
        <SLM:depend>pps-setup</SLM:depend>
   </SLM:component>

   <SLM:component name="swud_legacy_pps_hmi">
        <SLM:command>mount</SLM:command>
        <SLM:args>-T swud /base/lib/dll/swud-legacy-hmi.so</SLM:args>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
        <SLM:depend>swud</SLM:depend>
        <SLM:depend>pps-setup</SLM:depend>
   </SLM:component>

    <SLM:component name="swud_self_update_target">
        <SLM:command>mount</SLM:command>
        <SLM:args>-T swud -o delta=/var/swud/mydelta.mld -o temp=/var/swud/updAgentTmp -o persist=/var/swud/swu_persist.manifest /base/lib/dll/rb_self_update.so </SLM:args>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
        <SLM:depend>swud</SLM:depend>
        <SLM:depend>pps-setup</SLM:depend>
   </SLM:component>

   <SLM:component name="swud_self_update_hmi">
        <SLM:command>mount</SLM:command>
        <SLM:args>-T swud -o QNX -o CAR2.1 /base/lib/dll/swud-self-update-hmi.so</SLM:args>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
        <SLM:depend>swud</SLM:depend>
        <SLM:depend>screen-ready</SLM:depend>
   </SLM:component>
   -->

<!--
   <SLM:component name="pps-mixer">
        <SLM:command>pps-mixer</SLM:command>
	<SLM:args></SLM:args>
 	<SLM:waitfor wait="pathname">/pps/services/audio/devices</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>io-audio_mcbsp</SLM:depend>
	<SLM:depend>pps-setup</SLM:depend>
   </SLM:component>
-->

    <SLM:component name="audioman">
	  <SLM:command>audioman</SLM:command>
	  <SLM:args>-r 1</SLM:args>
	  <SLM:waitfor wait="pathname">/pps/services/audio/devices</SLM:waitfor>
	  <SLM:stop stop="signal">SIGTERM</SLM:stop>
	  <SLM:depend>io-audio_mcbsp</SLM:depend>
	  <SLM:depend>pps-setup</SLM:depend>
	  <SLM:priority>11r</SLM:priority>
	<!--  <SLM:depend>slogger2-ready</SLM:depend> -->
   </SLM:component>
   
   
   <SLM:component name="slogger2-ready">
	  <SLM:command>no_loop</SLM:command>
	  <SLM:args></SLM:args>
	  <SLM:waitfor wait="pathname">/dev/shmem/slogger2-output.log</SLM:waitfor>
   </SLM:component>
   

   <SLM:component name="nowplaying">
	  <SLM:command>nowplaying</SLM:command>
	  <SLM:args>-U 393:393,361,1001,1101,1201,0</SLM:args>
	  <SLM:waitfor wait="pathname">/pps/services/multimedia/mediaplayer/</SLM:waitfor>
	  <SLM:waitfor wait="pathname">/pps/services/multimedia/mediacontroller/</SLM:waitfor>
	  <SLM:stop stop="signal">SIGTERM</SLM:stop>
	  <SLM:depend>audioman</SLM:depend>
	  <SLM:depend>pps-setup</SLM:depend>
   </SLM:component>

   <SLM:component name="mixer-volume">
	  <SLM:command>/base/scripts/mixer-volume-init.sh</SLM:command>
	  <SLM:depend>audioman</SLM:depend>
   </SLM:component>   
   
   <SLM:component name="mxcvpu">
     <SLM:command>/base/usr/sbin/mxcvpu</SLM:command>
     <SLM:waitfor wait="pathname">/dev/mxc_vpu</SLM:waitfor>
  </SLM:component>
  
  <SLM:component name="uptime-mmrenderer">
        <SLM:command>/proc/boot/timestamp</SLM:command>
        <SLM:args>"mmrenderer LAUNCHED"</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
        <SLM:depend>mmrenderer</SLM:depend>
    </SLM:component>
  <SLM:component name="rm-mmrenderer">
        <SLM:command>/base/bin/rm</SLM:command>
        <SLM:args> -rf /pps/services/multimedia/renderer/context</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
		<SLM:depend>pps-setup</SLM:depend>
	    <SLM:depend>resarb</SLM:depend>
	    <SLM:depend>syslink_daemon</SLM:depend>
	    <SLM:depend>io-audio_mcbsp</SLM:depend>
	    <SLM:depend>audioman</SLM:depend>
	    <SLM:depend>screen-ready</SLM:depend>
	    <SLM:depend>mxcvpu</SLM:depend>		
    </SLM:component> 

   <SLM:component name="mmrenderer">
        <SLM:command>mm-renderer</SLM:command>
	    <SLM:args>-c</SLM:args>
 	    <SLM:stop stop="signal">SIGTERM</SLM:stop>
	    <SLM:depend>rm-mmrenderer</SLM:depend>
        <SLM:waitfor wait="pathname">/pps/services/multimedia/renderer/control</SLM:waitfor>
		<SLM:priority>11r</SLM:priority>
   </SLM:component>

   <SLM:component name="mmsync">
        <SLM:command>mm-sync</SLM:command>
	<SLM:args>-D -c /etc/mmsync_car2.conf</SLM:args>
	<SLM:waitfor wait="pathname">/dev/mmsync</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>qdb</SLM:depend>
   </SLM:component>   

   <SLM:component name="artwork">
        <SLM:command>artwork_client_car2</SLM:command>
        <SLM:args>-p /apps/mediasources/imagecache/ -c /apps/mediasources/imagecache/ -t</SLM:args>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
	    <SLM:depend>qdb</SLM:depend>
	    <SLM:depend>mmsync</SLM:depend>
	    <SLM:depend>pps-setup</SLM:depend>
	    <SLM:depend>mmrenderer</SLM:depend>
   </SLM:component>
<!--  dxc 
   <SLM:component name="mirrorlink-sandbox">
        <SLM:command>io-pkt-v6-hc</SLM:command>
        <SLM:args> -i1 -d ncm pnp -ptcpip prefix=/mirrorlink_sandbox</SLM:args>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
        <SLM:waitfor wait="pathname">/mirrorlink_sandbox/dev/socket</SLM:waitfor>
        <SLM:depend>usb</SLM:depend>
        <SLM:depend>pps-setup</SLM:depend>
   </SLM:component>

   <SLM:component name="mlink-daemon">
        <SLM:command>mlink-daemon</SLM:command>
        <SLM:args>-S -i /usr/mlink/default.png -L /usr/mlink/vnclicense</SLM:args>
        <SLM:envvar>SOCK=/mirrorlink_sandbox/</SLM:envvar>
        <SLM:envvar>LD_LIBRARY_PATH=/usr/lib/realvnc/</SLM:envvar>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
        <SLM:depend>mirrorlink-sandbox</SLM:depend>
   </SLM:component>

   <SLM:component name="mlink-rtp">
        <SLM:command>mlink-rtp</SLM:command>
        <SLM:args>-S</SLM:args>
        <SLM:envvar>SOCK=/mirrorlink_sandbox/</SLM:envvar>
        <SLM:envvar>LD_LIBRARY_PATH=/usr/lib/realvnc/</SLM:envvar>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
        <SLM:depend>mirrorlink-sandbox</SLM:depend>
   </SLM:component>
   
   -->
   
     <SLM:component name="uptime-mmdetect">
        <SLM:command>/proc/boot/timestamp</SLM:command>
        <SLM:args>"mmdetect LAUNCHED"</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
        <SLM:depend>mmdetect</SLM:depend>
    </SLM:component>

   <SLM:component name="mmdetect">
        <SLM:command>mm-detect</SLM:command>
	<SLM:args> </SLM:args>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>usblauncher_otg</SLM:depend>
	<SLM:depend>mmsync</SLM:depend>
	<SLM:priority>11r</SLM:priority>
   </SLM:component>

   <SLM:component name="mmtrkmgr">
        <SLM:command>mm-trkmgr</SLM:command>
	<SLM:args></SLM:args>
	<SLM:waitfor wait="pathname">/dev/trkmgr</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>   

   <SLM:component name="mmcontrol">
        <SLM:command>mm-control</SLM:command>
	<SLM:args> -c /etc/mm-control.cfg</SLM:args>
	<SLM:waitfor wait="pathname">/pps/services/mm-control/control</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>mmtrkmgr</SLM:depend>
	<SLM:depend>mmrenderer</SLM:depend>
   </SLM:component>

    <SLM:component name="mmplayer">
        <SLM:command>mm-player</SLM:command>
	<SLM:args>-l -c /etc/mm-player.cfg</SLM:args>
	<SLM:waitfor wait="pathname">/sys/csm/mm-player.sys/default</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>qdb</SLM:depend>
	<SLM:depend>mmdetect</SLM:depend>
	<SLM:depend>mmrenderer</SLM:depend>
   </SLM:component>


   <SLM:component name="asr">
        <SLM:command>io-asr-generic</SLM:command>
	<SLM:args>-c /etc/asr-car.cfg</SLM:args>
	<SLM:waitfor wait="pathname">/pps/services/asr/control</SLM:waitfor>
 	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>pps-setup</SLM:depend>
	<SLM:depend>io-audio_mcbsp</SLM:depend>
   </SLM:component>
   
   <!-- dxc  

   <SLM:component name="hmi-notification-mgr">
   	<SLM:command>hmi-notification-mgr</SLM:command>
	<SLM:args>-c /etc/system/hmi-notification/policy.cfg</SLM:args>
	<SLM:waitfor wait="pathname">/pps/services/hmi-notification/Messaging</SLM:waitfor>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>pps-setup</SLM:depend>
   </SLM:component>
   
   -->

   <!-- this object is created to indicate the HMI is done loading -->
   <SLM:component name="hmi-loaded">
        <SLM:command launch="builtin">no_op</SLM:command>
        <SLM:args></SLM:args>
        <SLM:waitfor wait="pathname" polltime="100:60000">/pps/system/navigator/status/navigator_loaded</SLM:waitfor>
   </SLM:component>

    <SLM:component name="loadedtime-hmi">
        <SLM:command>/proc/boot/timestamp</SLM:command>
        <SLM:args>"HMI LOADED"</SLM:args>
        <SLM:waitfor wait="exits"></SLM:waitfor>
        <SLM:depend>hmi-loaded</SLM:depend>
    </SLM:component>

    <SLM:component name="navigation">
	<SLM:command>/base/scripts/navigation.sh</SLM:command>
	<SLM:args></SLM:args>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>pps-setup</SLM:depend>
	<SLM:depend>screen-ready</SLM:depend>
	<SLM:depend>hmi-loaded</SLM:depend>
    </SLM:component> 
    
    <SLM:component name="apkRuntime">
	<SLM:command>/base/scripts/apkruntime-start.sh</SLM:command>
	<SLM:args></SLM:args>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>hmi</SLM:depend>
	<SLM:depend>hmi-loaded</SLM:depend>
	<SLM:depend>launcher</SLM:depend>
    </SLM:component> 
    

    <SLM:component name="resarb">
    <SLM:command>resarb</SLM:command>
    <SLM:args></SLM:args>
    <SLM:stop stop="signal">SIGTERM</SLM:stop>
    </SLM:component>

   <SLM:component name="qconn">
        <SLM:command>qconn</SLM:command>
	<SLM:args></SLM:args>
 	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>ethernet</SLM:depend>
   </SLM:component>
    
   <SLM:component name="inetd">
        <SLM:command>inetd</SLM:command>
	<SLM:args></SLM:args>
 	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>ethernet</SLM:depend>
   </SLM:component>

    <SLM:component name="ssh">
	<SLM:command>/base/scripts/ssh-start.sh</SLM:command>
	<SLM:args></SLM:args>
	<SLM:stop stop="signal">SIGTERM</SLM:stop>
	<SLM:depend>ethernet</SLM:depend>
    </SLM:component> 

    <SLM:component name="net_configured">
	<SLM:command>if_up</SLM:command>
	<SLM:args>-r 60 -s 2 en0</SLM:args>
	<SLM:depend>ethernet</SLM:depend>
	<SLM:waitfor wait="exits" polltime="100:120000"></SLM:waitfor>
    </SLM:component> 
	
    <SLM:component name="dlna">
	  <SLM:command>/base/scripts/dlna-start.sh</SLM:command>
	  <SLM:args></SLM:args>
	  <SLM:depend>net_configured</SLM:depend>
    </SLM:component>
    
    <SLM:component name="ip-provider">
          <SLM:command>ip-provider</SLM:command>
          <SLM:args>-E1</SLM:args>
          <SLM:depend>net_configured</SLM:depend>
    </SLM:component>
	
	<SLM:component name="appinst-mgr">
	  <SLM:command>appinst-mgr</SLM:command>
	  <SLM:args></SLM:args>
	  <SLM:depend>net_configured</SLM:depend>
    </SLM:component>
     
    <SLM:component name="settime">
        <SLM:command>/base/scripts/setdate.sh</SLM:command>
        <SLM:args></SLM:args>
        <SLM:depend>net_configured</SLM:depend>
	<SLM:waitfor wait="exits"></SLM:waitfor>
    </SLM:component>
    
<!-- Comment this out if using the above multimedia component-->
  <SLM:component name="multimedia">
          <SLM:command launch="builtin">no_op</SLM:command>
        <SLM:stop stop="signal">SIGTERM</SLM:stop>
   </SLM:component>

   <SLM:component name="secondary-disks">                          
        <SLM:command>/proc/boot/.start-secondary-disks</SLM:command>                 
        <SLM:depend>hmi-loaded</SLM:depend>                          
   </SLM:component> 

</SLM:system>

